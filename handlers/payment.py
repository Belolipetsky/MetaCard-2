from aiogram import types, Dispatcher
from utils.config import ADMIN_ID
from keyboards.payment_keyboard import get_payment_keyboard

# –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ø—ã—Ç–æ–∫ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ë–î)
def has_attempts(user_id):
    # –ó–¥–µ—Å—å —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    return False

async def payment_command(message: types.Message):
    user_id = message.from_user.id
    if str(user_id) == ADMIN_ID:
        await message.answer("üîì –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: –ø–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.")
        # –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ø—ã—Ç–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
        return

    if not has_attempts(user_id):
        await message.answer(
            "üí≥ –î–ª—è –≤—ã—Ç—è–≥–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å. –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –ø–∞–∫–µ—Ç–æ–≤:",
            reply_markup=get_payment_keyboard()
        )
    else:
        await message.answer("–£ —Ç–µ–±—è –µ—Å—Ç—å –ø–æ–ø—ã—Ç–∫–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º!")

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(payment_command, lambda message: message.text.startswith("–ö—É–ø–∏—Ç—å"), state="*")
