# handlers/start.py
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from utils.texts import START_MESSAGE, ASK_NAME_MESSAGE
from keyboards.main_menu import main_menu

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
class StartStates(StatesGroup):
    waiting_for_phone = State()
    waiting_for_name = State()

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands=["start"], state="*")
    dp.register_message_handler(process_contact, content_types=types.ContentType.CONTACT, state=StartStates.waiting_for_phone)
    dp.register_message_handler(process_name, state=StartStates.waiting_for_name)

async def cmd_start(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞
    phone_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    phone_button = types.KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
    phone_keyboard.add(phone_button)
    await message.answer(START_MESSAGE, reply_markup=phone_keyboard)
    await StartStates.waiting_for_phone.set()

async def process_contact(message: types.Message, state: FSMContext):
    if message.contact:
        phone = message.contact.phone_number
        await state.update_data(phone=phone)
        await message.answer(ASK_NAME_MESSAGE)
        await StartStates.waiting_for_name.set()
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.")

async def process_name(message: types.Message, state: FSMContext):
    name = message.text.strip()
    data = await state.get_data()
    phone = data.get("phone")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ utils/database.py)
    await message.answer(f"–°–ø–∞—Å–∏–±–æ, {name}! –¢–µ–ø–µ—Ä—å –≤—Å—ë –≥–æ—Ç–æ–≤–æ!", reply_markup=main_menu())
    await state.finish()
